#!/usr/bin/python
import sys

from i3pystatus import Status
from i3pystatus.updates import pacman


class Colors(object):
    DEFAULT = '#cccccc'
    WARNING = '#ffd760'
    CRITICAL = '#ff5454'
    DISABLED = '#777777'

    BLUE = '#3377ff'
    BROWN = '#cfb57a'
    CYAN = '#99ffff'
    GREEN = '#00dd00'
    LIGHT_BLUE = '#ccccff'
    LIGHT_BROWN = '#ffaa99'
    LIGHT_GREEN = '#99ffaa'
    LIGHT_YELLOW = '#ffff99'
    PINK = '#ff99aa'


try:
    bar_id = sys.argv[1]
except IndexError:
    bar_id = None

status = Status(standalone=True)

add = status.register

# status for top bar
if bar_id == "bar0":
    add("clock",
        format=" %a %b %d %Y %H:%M",
        on_rightclick='~/.config/i3/status-utils/calendar',
        interval=5)

    add("text",
        text="",
        on_rightclick='dmenu_session')

    add("xkblayout",
        format=" {symbol}",
        layouts=["us", "de"],
        interval=10)

    add("network",
        format_up=' {essid}',
        format_down='',
        interface='wlp4s0',
        color_up=Colors.DEFAULT,
        color_down=Colors.CRITICAL,
        dynamic_color=False,
        on_leftclick=None,
        on_rightclick=None,
        on_upscroll=None,
        on_downscroll=None,
        interval=5)

    add("updates",
        format=" {count}",
        format_no_updates='',
        color=Colors.DEFAULT,
        color_no_updates=Colors.DEFAULT,
        backends=[pacman.Pacman()],
        on_rightclick='~/.config/i3/status-utils/updates',
        interval=1800)

    add("temp",
        format=" {temp:.0f}°C",
        color=Colors.DEFAULT,
        alert_color=Colors.CRITICAL,
        alert_temp=85,
        interval=5)

    add("pulseaudio",
        format="墳 {volume}%",
        format_muted="婢 {volume}%",
        color_unmuted=Colors.DEFAULT,
        color_muted=Colors.CRITICAL)

    add("battery",
        format=" {percentage:.0f}%{status}{remaining:%H:%M}",
        not_present_text=" not present",
        color=Colors.DEFAULT,
        full_color=Colors.DEFAULT,
        charging_color=Colors.DEFAULT,
        critical_color=Colors.CRITICAL,
        not_present_color=Colors.DISABLED,
        critical_level_percentage=4,
        critical_level_command='systemctl suspend',
        alert_percentage=5,
        alert=True,
        no_text_full=True,
        status={
            'CHR': '  ',
            'DIS': '  ',
            'FULL': '',
            'DPL': ''
        },
        interval=20)

# status for bottom bar
elif bar_id == "bar1":
    add("dpms",
        format='⏾ dpms',
        format_disabled='⏾ dpms',
        color=Colors.GREEN,
        color_disabled=Colors.DISABLED,
        interval=5)

    add("shell",
        command='~/.config/i3/status-utils/weather',
        format=' {output}',
        color=Colors.LIGHT_BLUE,
        error_color=Colors.DISABLED,
        on_rightclick='~/.config/i3/status-utils/weather browser',
        interval=1800)

    add("disk",
        format=" / {used}/{total}G",
        path="/",
        color=Colors.LIGHT_BROWN,
        on_rightclick='thunar /',
        interval=60)

    add("mem",
        format=" {used_mem}/{total_mem}G",
        color=Colors.LIGHT_GREEN,
        warn_color=Colors.WARNING,
        alert_color=Colors.CRITICAL,
        divisor=1024**3,
        interval=10)

    add("load",
        format="溜 {avg1} {avg5} ({tasks})",
        color=Colors.LIGHT_BLUE,
        critical_color=Colors.CRITICAL,
        interval=10)

    add("cpu_usage",
        format='({usage:02}%)',
        color=Colors.LIGHT_BROWN,
        interval=10)

    add("cpu_freq",
        format=' {avgg}GHz',
        color=Colors.LIGHT_BROWN,
        hints={
            'separator': False,
            'separator_block_width': 5
        },
        interval=10)

    add("uptime",
        format='祥 up {days}d {hours}h {mins}m',
        color=Colors.PINK,
        interval=50)

    add("network",
        format_up=' {interface} {v4}',
        format_down=' <span strikethrough="true">{interface}</span>',
        interface='enp0s31f6',
        color_up=Colors.CYAN,
        color_down=Colors.DISABLED,
        dynamic_color=False,
        on_leftclick=None,
        on_rightclick=('urxvt -name nmtui -geometry 100x40'
                       '-e nmtui-connect'),
        on_upscroll=None,
        on_downscroll=None,
        hints={
            'markup': 'pango'
        },
        interval=10)

    add("network",
        format_up=' {interface} {v4}',
        format_down=' <span strikethrough="true">{interface}</span>',
        interface='wlp4s0',
        color_up=Colors.LIGHT_YELLOW,
        color_down=Colors.DISABLED,
        dynamic_color=False,
        on_leftclick=None,
        on_rightclick=('urxvt -name nmtui -geometry 100x40 '
                       '-e nmtui-connect'),
        on_upscroll=None,
        on_downscroll=None,
        hints={
            'markup': 'pango'
        },
        interval=10)

    add("network",
        format_up=' {interface} {v4}',
        format_down=' <span strikethrough="true">{interface}</span>',
        interface='tun0',
        color_up=Colors.BLUE,
        color_down=Colors.DISABLED,
        dynamic_color=False,
        unknown_up=True,
        on_leftclick=None,
        on_rightclick=None,
        on_upscroll=None,
        on_downscroll=None,
        hints={
            'markup': 'pango'
        },
        interval=10)

    add("shell",
        command='~/.config/i3/status-utils/ip',
        format='爵 {output}',
        color=Colors.GREEN,
        error_color=Colors.CRITICAL,
        on_rightclick='/usr/bin/true',
        interval=300)

    add("network",
        format_up=('異 {interface} {bytes_sent}kb/s ({tx_tot_Mbytes}M) '
                   ' {bytes_recv}kb/s ({rx_tot_Mbytes}M) '),
        format_down='異 disconnected',
        interface='enp0s31f6',
        unknown_up=True,
        next_if_down=True,
        color_down=Colors.DISABLED,
        start_color=Colors.LIGHT_GREEN,
        end_color=Colors.CRITICAL,
        dynamic_color=True,
        on_leftclick='cycle_interface',
        on_rightclick=('urxvt -name nmtui -geometry 100x40 '
                       '-e nmtui'),
        interval=2)

# unknown bar, use clock placeholder
else:
    add("clock")

status.run()
